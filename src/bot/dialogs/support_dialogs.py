from aiogram import F
from aiogram.enums import ContentType

from aiogram_dialog import Dialog, Window, DialogManager
from aiogram_dialog.widgets.input import TextInput, MessageInput
from aiogram_dialog.widgets.kbd import (
    Back,
    Button,
    Cancel,
    Start,
    Row,
    Next, StubScroll, NumberedPager,
    Group, ScrollingGroup, Select, PrevPage, CurrentPage, NextPage
)
from aiogram_dialog.widgets.text import Const, Format, Multi
from aiogram_dialog.widgets.media import DynamicMedia

from src.bot.states import LetterStatesGroup, LetterAnswerSG, WriteMessageSG, LetterHistorySG
from .getters import get_letter, get_wait_letters_db, get_letter_info, get_all_letters_db
from .support_callbacks import (
    confirm_letter,
    sent_photo,
    on_input_photo,
    on_delete_photo,
    on_wait_letters, selected_letter, answer_letter, on_wrote_answer, cancel_letter, on_input_user_id, invalid_user_id,
    on_wrote_message, selected_history_letter, message_input_fixing
)


async def close_dialog(_, __, dialog_manager: DialogManager, **kwargs):
    await dialog_manager.done()


support_dialog = Dialog(
    Window(
        Const("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º"),
        Start(
            Const('üìÆ–ù–∞–ø–∏—Å–∞—Ç—å'),
            id='write_letter',
            state=LetterStatesGroup.LETTER
        ),
        MessageInput(
            func=message_input_fixing
        ),
        state=LetterStatesGroup.WRITE
    ),
    Window(
        Const("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"),
        TextInput(
            id="letter",
            on_success=Next(),
            filter=F.text.len() >= 10
        ),
        state=LetterStatesGroup.LETTER,
    ),
    Window(
        DynamicMedia("photo", when="photo"),
        StubScroll(id="pages", pages="media_count"),
        Group(
            NumberedPager(scroll="pages", when=F["pages"] > 1),
            width=8,
        ),
        Format("<blockquote>{letter}</blockquote>"),
        Button(Const("üì∑–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç"), id="photo", on_click=sent_photo),
        Button(Const("üì®–û—Ç–ø—Ä–∞–≤–∏—Ç—å"), id="send", on_click=confirm_letter),
        Cancel(Const("‚ùå–û—Ç–º–µ–Ω–∏—Ç—å")),
        state=LetterStatesGroup.SEND,
    ),
    Window(
        Const('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç'),
        DynamicMedia("photo", when="photo"),
        StubScroll(id="pages", pages="media_count"),
        Group(
            NumberedPager(scroll="pages", when=F["pages"] > 1),
            width=8,
        ),
        Button(
            Format("üóëÔ∏è Delete photo #{media_number}"),
            id="del",
            on_click=on_delete_photo,
            when="media_count",
        ),
        MessageInput(on_input_photo, content_types=[ContentType.PHOTO]),
        Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"), when="photo"),
        state=LetterStatesGroup.SCREEN,
    ),
    getter=get_letter,
)


admin_support_dialog = Dialog(
    Window(
        Const("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è:"),
        Button(
            Const('‚åõ –í–æ–ø—Ä–æ—Å—ã –≤ –æ–∂–∏–¥–∞–Ω–∏–∏'),
            id='wait_letter',
            on_click=on_wait_letters
        ),
        Start(
            Const('üìú –ò—Å—Ç–æ—Ä–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤'),
            id='letter_history',
            state=LetterHistorySG.HISTORY
        ),
        Start(
            Const('üì® –ù–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é'),
            id='write_message',
            state=WriteMessageSG.ENTER_USER_ID
        ),
        MessageInput(
            func=message_input_fixing
        ),
        state=LetterAnswerSG.START
    ),
    Window(
        Const('üì™ –°–ø–∏—Å–æ–∫ –ø—É—Å—Ç', when=F['is_empty'] == 1),
        Const("‚åõ–°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤, –æ–∂–∏–¥–∞—é—â–∏—Ö –æ—Ç–≤–µ—Ç–∞:", when=F['is_empty'] == 0),
        ScrollingGroup(
            Select(
                id="letter_select",
                items="letters",
                item_id_getter=lambda item: item.letter_id,
                text=Format("‚Ññ{item.letter_id}"),
                on_click=selected_letter,
                when=F['is_empty'] == 0
            ),
            id="letter_group",
            height=3,
            width=2,
            hide_on_single_page=True,
            hide_pager=True
        ),
        Row(
            PrevPage(
                scroll="letter_group", text=Format("‚óÄÔ∏è"),
            ),
            CurrentPage(
                scroll="letter_group", text=Format("{current_page1}"),
            ),
            NextPage(
                scroll="letter_group", text=Format("‚ñ∂Ô∏è"),
            ),
            when=F['is_empty'] == 0
        ),
        Back(Format("‚óÄÔ∏è –í –º–µ–Ω—é")),
        state=LetterAnswerSG.WAIT_LETTERS,
        getter=get_wait_letters_db,
    ),
    Window(
        DynamicMedia("photo", when="photo"),
        StubScroll(id="pages", pages="media_count"),
        Group(
            NumberedPager(scroll="pages", when=F["pages"] > 1),
            width=8,
        ),
        Multi(
            Format(
                '''
üìÑ <b>‚Ññ</b><code>{letter.letter_id}</code>\n
<b>–ó–∞–¥–∞–Ω –≤:</b> {at} (MOSCOW)
<b>user_id</b>: <code>{letter.user_id}</code>
<b>–í–æ–ø—Ä–æ—Å –æ—Ç <a href="tg://user?id={letter.user_id}">–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</a>:\n</b>
<blockquote>{letter.letter}</blockquote>\n
                '''
            )
        ),
        Button(
            Const('üì¨ –û—Ç–≤–µ—Ç–∏—Ç—å'),
            id='answer_letter',
            on_click=answer_letter
        ),
        Button(
            Const('‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å'),
            id='cancel_letter',
            on_click=cancel_letter
        ),
        Back(Format('‚óÄÔ∏è –ù–∞–∑–∞–¥')),
        state=LetterAnswerSG.LETTER_INFO,
        getter=get_letter_info
    ),
    Window(
        Const('üñäÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:'),
        TextInput(
            id='write_answer',
            on_success=on_wrote_answer,
        ),
        Back(Format('‚óÄÔ∏è –ù–∞–∑–∞–¥')),
        state=LetterAnswerSG.ANSWER,
    ),
    on_process_result=close_dialog,
)


write_message_dialog = Dialog(
    Window(
        Const('üë§ –ù–∞–ø–∏—à–∏—Ç–µ <b>user_id</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ'),
        TextInput(
            id='input_id',
            type_factory=int,
            on_success=on_input_user_id,
            on_error=invalid_user_id
        ),
        state=WriteMessageSG.ENTER_USER_ID,
    ),
    Window(
        Const('üñäÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:'),
        MessageInput(on_wrote_message),
        Start(
            Format('‚óÄÔ∏è –ù–∞–∑–∞–¥'),
            id='back',
            state=LetterAnswerSG.START
        ),
        state=WriteMessageSG.WRITE,
    ),
    Window(
        Const('‚ùó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º <b>user_id</b> –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω...'),
        Start(
            Format('üîÅ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞'),
            state=WriteMessageSG.ENTER_USER_ID,
            id='try_again'
        ),
        Start(
            Format('‚óÄÔ∏è –ù–∞ –≥–ª–∞–≤–Ω—É—é'),
            id='back',
            state=LetterAnswerSG.START
        ),
        state=WriteMessageSG.USER_NOT_FOUND
    ),
    on_process_result=close_dialog
)


letter_history_dialog = Dialog(
    Window(
        Const('üì™ –°–ø–∏—Å–æ–∫ –ø—É—Å—Ç', when=F['is_empty'] == 1),
        Const("üìú <b>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª –¥–∞–Ω –æ—Ç–≤–µ—Ç</b>:", when=F['is_empty'] == 0),
        ScrollingGroup(
            Select(
                id="letter_select",
                items="letters",
                item_id_getter=lambda item: item.letter_id,
                text=Format("‚Ññ{item.letter_id}"),
                on_click=selected_history_letter,
                when=F['is_empty'] == 0
            ),
            id="letter_group",
            height=3,
            width=2,
            hide_on_single_page=True,
            hide_pager=True
        ),
        Row(
            PrevPage(
                scroll="letter_group", text=Format("‚óÄÔ∏è"),
            ),
            CurrentPage(
                scroll="letter_group", text=Format("{current_page1}"),
            ),
            NextPage(
                scroll="letter_group", text=Format("‚ñ∂Ô∏è"),
            ),
            when=F['is_empty'] == 0
        ),
        Start(
            Format("‚óÄÔ∏è –í –º–µ–Ω—é"),
            id='to_menu',
            state=LetterAnswerSG.START
        ),
        state=LetterHistorySG.HISTORY,
    ),
    Window(
        DynamicMedia("photo", when="photo"),
        StubScroll(id="pages", pages="media_count"),
        Group(
            NumberedPager(scroll="pages", when=F["pages"] > 1),
            width=8,
        ),
        Multi(
            Format(
                '''
üìÑ <b>‚Ññ</b><code>{letter.letter_id}</code>\n
<b>–ó–∞–¥–∞–Ω –≤:</b> {at} (MOSCOW)
<b>user_id</b>: <code>{letter.user_id}</code>
<b>–í–æ–ø—Ä–æ—Å –æ—Ç <a href="tg://user?id={letter.user_id}">–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</a>:\n</b>
<blockquote>{letter.letter}</blockquote>\n
<b>–û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å:</b>\n <blockquote>{letter.answer}</blockquote>\n
<b>–û—Ç–≤–µ—Ç –¥–∞–Ω –≤ {answered_at}</b>
                '''
            )
        ),
        Back(Format('‚óÄÔ∏è –ù–∞–∑–∞–¥')),
        state=LetterHistorySG.LETTER_INFO,
        getter=get_letter_info
    ),
    Window(
        Const('üñäÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:'),
        TextInput(
            id='write_answer',
            on_success=on_wrote_answer,
        ),
        Back(Format('‚óÄÔ∏è –ù–∞–∑–∞–¥')),
        state=LetterHistorySG.SEND_MESSAGE,
    ),
    getter=get_all_letters_db,
)
